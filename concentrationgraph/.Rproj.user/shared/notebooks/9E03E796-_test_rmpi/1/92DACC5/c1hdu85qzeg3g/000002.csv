"0","compare = function(p,n,z) {"
"0","library(Matrix)"
"0","library(MASS)"
"0","library(spam)"
"0","library(fillgraph)"
"0","source('concentrationgraph.r')"
"0","##### for p = 500, z = 0.0065 gives 2.8% density"
"0","s = 0.5  # fraction of negative coefficients"
"0","a = 0.3  # minimum magnitude of non-zero coefficients"
"0","b = 0.7  # maximum magnitude of non-zero coefficients"
"0","plower = p*(p-1)/2"
"0","set.seed(12345) #seed for generating L"
"0","## diagonals"
"0","D = runif(p,2,5)"
"0","## off-diagonals"
"0","T = diag(p)"
"0","T[upper.tri(T)] = 0"
"0","T[lower.tri(T)] = (ifelse(runif(plower)<s, -1, 1) * "
"0","		   ifelse(runif(plower)<z,  1, 0) * "
"0","		   runif(plower, a, b))"
"0","L = diag(1.0/sqrt(D)) %*% T   # cholesky factor"
"0","omega = t(L) %*% L            # omega"
"0","sigma = solve(omega)"
"0","sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero"
"0","density = sum(abs(omega[lower.tri(omega)])>0)/choose(p,2)"
"0","set.seed(23456 + 1) #seed for generating data"
"0","X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations"
"0","X = scale(X, center = TRUE, scale = FALSE) # centered obs"
"0","algo1time = proc.time()[3]"
"0","algo1 = concentrationgraph(Y = X, G = abs(omega)>0)$Shat"
"0","algo1time = proc.time()[3] - algo1time"
"0","algo1norm = norm(algo1-omega,type=""F"")/norm(omega,type=""F"")"
"0","ipftime = proc.time()[3]"
"0","ipfshat = ipf(X,abs(omega)>0,10^(-5))$Shat"
"0","ipftime = proc.time()[3] - ipftime"
"0","ipfnorm = norm(ipfshat-omega,type=""F"")/norm(omega,type=""F"")"
"0","ipfalgotime = proc.time()[3]"
"0","ipfalgoshat = ipf(X,abs(omega)>0,10^(-5), algo1)$Shat"
"0","ipfalgotime = proc.time()[3] - ipfalgotime"
"0","ipfalgonorm = norm(ipfalgoshat-omega,type=""F"")/norm(omega,type=""F"")"
"0","return(list(density = density, algo1time = algo1time,algo1norm = algo1norm, ipftime = ipftime,ipfnorm = ipfnorm, ipfalgotime = ipfalgotime, ipfalgonorm = ipfalgonorm))"
"0","}"
