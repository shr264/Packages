sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
ccdr_est = ccdr_cust(X = X, lambda = 1)
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 1)
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 1)
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 0.1)
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
ccdr_est
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 0.1)>0
diag(ccdr_est) = 0
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 1)>0
diag(ccdr_est) = 0
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 0.5)>0
diag(ccdr_est) = 0
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
reps = 20
ccdrfpr = rep(0,reps)
ccdrtpr = rep(0,reps)
partialfpr = rep(0,reps)
partialtpr = rep(0,reps)
ccdrmcc = rep(0,reps)
partialmcc = rep(0,reps)
lambda = seq(0.1,4, length= reps)
#lambda = 0.35
ccdrtab = NULL
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])
ccdrfpr[i] = fpr(adj,estadj)
ccdrtpr[i] = tpr(adj,estadj)
ccdrmcc[i] = mcc(adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(knitr)
library(MASS)
library(ggplot2)
library(Matrix)
library(pcalg)
library(Rgraphviz)
library(igraph)
library(sparsebn)
library(partial)
library(ggm)
setwd("/Users/syedrahman/Documents/Fall2017/Research")
load("amat.Rdata")
source("helperfunctions.R")
set.seed(12345)
genB <- function(Yeast1, a = 0.3, b = 0.7){
p = dim(Yeast1)[1]
m = floor(p/2)
Border = c(sample(1:m,m),sample((m+1):p,m))
adj = t(topSort(Yeast1))
adj = adj[Border,Border]
Bmat = matrix(runif(p^2,a,b),nrow = p, ncol = p)
signmat = matrix(0,nrow = p, ncol = p)
signmat = ifelse(runif(p^2)<0.5,-1,1)
B = adj*Bmat*signmat
diag(B) = runif(p,2,5)
return(list(adj = adj,B = B))
}
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
ccdr_est = ccdr_cust(X = X, lambda = 0.5)>0
diag(ccdr_est) = 0
print(plot(graph_from_adjacency_matrix(ccdr_est), layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
reps = 20
ccdrfpr = rep(0,reps)
ccdrtpr = rep(0,reps)
partialfpr = rep(0,reps)
partialtpr = rep(0,reps)
ccdrmcc = rep(0,reps)
partialmcc = rep(0,reps)
lambda = seq(0.1,4, length= reps)
#lambda = 0.35
ccdrtab = NULL
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])
ccdrfpr[i] = fpr(adj,estadj)
ccdrtpr[i] = tpr(adj,estadj)
ccdrmcc[i] = mcc(adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])
ccdrfpr[i] = fpr(adj,estadj)
ccdrtpr[i] = tpr(adj,estadj)
ccdrmcc[i] = mcc(adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
#lambda = seq(0.1,4, length= reps)
lambda = 0.35
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])>0
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
lambda = seq(0.1,4, length= reps)
#lambda = 0.35
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])>0
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
ccdrfpr
ccdrtpr
ccdrmcc
lambda = seq(0.01,4, length= reps)
#lambda = 0.35
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])>0
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
ccdrfpr
ccdrtpr
ccdrmcc
for(i in 1:length(lambda)){
estadj = abs(ccdr_cust(X = X,lambda = lambda[i]))>0
ccdrfpr[i] = fpr(BY1$adj,estadj)
ccdrtpr[i] = tpr(BY1$adj,estadj)
ccdrmcc[i] = mcc(BY1$adj,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
for(i in 1:length(lambda)){
estadj = abs(ccdr_cust(X = X,lambda = lambda[i]))>0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
ccdrfpr
ccdrtpr
ccdrmcc
for(i in 1:length(lambda)){
estadj = abs(partial_cust1(X=X,lambda = lambda[i],m = 25))>0
partialfpr[i] = fpr(BY1$B!=0,estadj)
partialtpr[i] = tpr(BY1$B!=0,estadj)
partialmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
partialfpr
partialtpr
partialmcc
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])!=0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
estadj
#lambda = seq(0.01,4, length= reps)
lambda = 0.35
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])!=0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
estadj
for(i in 1:length(lambda)){
estadj = partial_cust2(X=X,lambda = lambda[i],m = 25)!=0
partialfpr[i] = fpr(BY1$B!=0,estadj)
partialtpr[i] = tpr(BY1$B!=0,estadj)
partialmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
partialfpr
partialtpr
partialmcc
lambda = seq(0.01,4, length= reps)
#lambda = 0.35
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])!=0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
ccdrfpr
ccdrtpr
ccdrmcc
for(i in 1:length(lambda)){
estadj = partial_cust2(X=X,lambda = lambda[i],m = 25)!=0
partialfpr[i] = fpr(BY1$B!=0,estadj)
partialtpr[i] = tpr(BY1$B!=0,estadj)
partialmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
partialfpr
partialtpr
partialmcc
#lambda = seq(0.01,4, length= reps)
lambda = 0.1
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i])!=0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
estadj
ccdr_cust(X = X,lambda = lambda[i])
ccdr_cust(X = X,lambda = 0.1)
max(abs(partial_cust2(X = X,lambda = 0.1) - ccdr_cust(X = X,lambda = 0.1)))
max(abs(partial_cust2(X = X,lambda = 0.1, m = 25) - ccdr_cust(X = X,lambda = 0.1)))
B
BY1$B
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(knitr)
library(MASS)
library(ggplot2)
library(Matrix)
library(pcalg)
library(Rgraphviz)
library(igraph)
library(sparsebn)
library(partial)
library(ggm)
setwd("/Users/syedrahman/Documents/Fall2017/Research")
load("amat.Rdata")
source("helperfunctions.R")
set.seed(12345)
genB <- function(Yeast1, a = 0.3, b = 0.7){
p = dim(Yeast1)[1]
m = floor(p/2)
Border = c(sample(1:m,m),sample((m+1):p,m))
adj = t(topSort(Yeast1))
adj = adj[Border,Border]
Bmat = matrix(runif(p^2,a,b),nrow = p, ncol = p)
signmat = matrix(0,nrow = p, ncol = p)
signmat = ifelse(runif(p^2)<0.5,-1,1)
B = adj*Bmat*signmat
diag(B) = runif(p,2,5)
return(list(adj = adj,B = B))
}
n = 200
BY1 = genB(Yeast1)
graph = graph_from_adjacency_matrix(BY1$adj)
p = dim(BY1$adj)[1]
m1 = 25
coords = matrix(0,ncol = 2, nrow = p)
coords[1:p,1] = seq(1,100,length = p)
coords[1:m1,2] = 1
coords[(m1+1):(p),2] = 2
print(plot(graph, layout = coords, vertex.size=10, vertex.label.dist = .1, edge.arrow.size = 0.5))
omega = t(BY1$B) %*% BY1$B            # omega
sigma = solve(omega)
sigma[abs(sigma)<1e-10] = 0   # set numerical error to zero
set.seed(23456 + 1) #seed for generating data
X = mvrnorm(n, mu=rep(0, p), Sigma=sigma) # observations
X = scale(X,center = TRUE, scale=TRUE)
reps = 20
ccdrfpr = rep(0,reps)
ccdrtpr = rep(0,reps)
partialfpr = rep(0,reps)
partialtpr = rep(0,reps)
ccdrmcc = rep(0,reps)
partialmcc = rep(0,reps)
#lambda = seq(0.01,4, length= reps)
lambda = 0.1
for(i in 1:length(lambda)){
estadj = ccdr_cust(X = X,lambda = lambda[i],verbose = TRUE)!=0
ccdrfpr[i] = fpr(BY1$B!=0,estadj)
ccdrtpr[i] = tpr(BY1$B!=0,estadj)
ccdrmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
for(i in 1:length(lambda)){
estadj = partial_cust2(X=X,lambda = lambda[i],m = 25, verbose = TRUE)!=0
partialfpr[i] = fpr(BY1$B!=0,estadj)
partialtpr[i] = tpr(BY1$B!=0,estadj)
partialmcc[i] = mcc(BY1$B!=0,estadj)
diag(estadj) = 0
rownames(estadj) = colnames(X)
colnames(estadj) = colnames(X)
#diag(estadj) = 0
graphccdr = graph_from_adjacency_matrix(estadj)
print(plot(graphccdr, layout = coords, vertex.size=15, vertex.label.dist = .1, edge.arrow.size = 0.5))
}
partial_cust2(X=X,lambda = lambda[i],m = 25, verbose = TRUE)
ccdr_cust(X=X,lambda = lambda[i], verbose = TRUE)
i
partial_cust2(X=X,lambda = lambda[i],m = 25, verbose = TRUE)[20:30,1:10]
ccdr_cust(X=X,lambda = lambda[i], verbose = TRUE)[20:30,1:10]
